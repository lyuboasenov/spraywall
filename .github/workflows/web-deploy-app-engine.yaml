name: Deploy webapp to App Engine

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    # branches: [ main ]

  workflow_dispatch:


jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node 20.x
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm ci
        working-directory: src/web

      - name: Build
        run: npm run build:ci:app_engine
        working-directory: src/web

      # - name: Test
      #   run: npm run test:ci:gh
      #   working-directory: src/web

      - name: Archive build
        if: success()
        uses: actions/upload-artifact@v1
        with:
          name: deploy_dist
          path: src/web/www

      # - name: Archive code coverage result
      #   if: success()
      #   uses: actions/upload-artifact@v1
      #   with:
      #     name: deploy_coverage
      #     path: src/web/coverage

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download build
        uses: actions/download-artifact@v1
        with:
          name: deploy_dist

      - name: Create app.yaml
        run: |
          touch deploy_dist/app.yaml
          cat > deploy_dist/app.yaml <<-EOM
          runtime: nodejs20

          handlers:
          # image files
          - url: /assets/(.*\.(bmp|gif|ico|jpeg|jpg|png|svg))
            static_files: ./assets/\1
            upload: ./(.*\.(bmp|gif|ico|jpeg|jpg|png|svg))

          - url: /(.*\.css)
            mime_type: text/css
            static_files: ./\1
            upload: ./(.*\.css)

          - url: /(.*\.js)
            mime_type: text/javascript
            static_files: ./\1
            upload: ./(.*\.js)

          - url: /(.*\.txt)
            mime_type: text/plain
            static_files: ./\1
            upload: ./(.*\.txt)

          - url: /svg
            static_dir: ionic/static/svg

          # site root
          - url: /
            static_files: ./index.html
            upload: ./index.html
          EOM

          cat deploy_dist/app.yaml

          echo "ls -a ${{ github.workspace }}"
          ls -a ${{ github.workspace }}

          echo "ls -a ${{ github.workspace }}/deploy_dist"
          ls -a ${{ github.workspace }}/deploy_dist
        shell: bash

      # Deploy to App Engine
      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_APP_ENGINE_DEPLOY }}'

      - id: 'deploy'
        uses: 'google-github-actions/deploy-appengine@v2'
        with:
          project_id: spraywall
          deliverables: deploy_dist

      # Example of using the output
      - id: 'test'
        run: 'curl "${{ steps.deploy.outputs.version_url }}"'